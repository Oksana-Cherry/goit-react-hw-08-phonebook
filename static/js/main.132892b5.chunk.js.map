{"version":3,"sources":["redux/store.js","routes.js","components/Navigation/Navigation.js","components/UserMenu/default-avatar.png","components/UserMenu/UserMenu.js","components/AuthNav/AuthNav.js","components/AppBar/AppBar.js","components/PrivateRoute.js","components/PublicRoute.js","App.js","index.js","components/Navigation/Navigation.module.css","components/AuthNav/AuthNav.module.css","components/UserMenu/UseMenu.module.css","redux/contacts/contact-actions.js","redux/contacts/contect-operations.js","redux/contacts/contact-selectors.js","redux/contacts/contact-reducer.js","components/Container/Container.js","components/Container/Container.module.css","components/AppBar/AppBar.module.css","redux/auth/auth-actions.js","redux/auth/auth-operations.js","redux/auth/auth-reducer.js","redux/auth/auth-selectors.js"],"names":["middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","authPersistConfig","key","storage","whitelist","store","configureStore","reducer","auth","persistReducer","authReducer","contacts","contactReducer","devTools","process","persistor","persistStore","routes","home","register","login","connect","state","isAuthenticated","authSelectors","getIsAuthenticated","to","exact","className","styles","link","activeClassName","activeLink","style","activeStyle","mapDispatchToProps","onLogout","authOperations","logOut","name","getUserName","avatar","defaultAvatar","container","src","alt","width","Button","type","variant","color","onClick","AuthNav","header","Component","component","redirectTo","routeProps","render","props","restricted","HomePage","lazy","RegisterPage","LoginPage","ContactsPage","App","this","onGetCurretnUser","Container","fallback","path","getCurrentUser","ReactDOM","StrictMode","loading","document","getElementById","module","exports","fetchContactRequrest","createAction","fetchContactSuccess","fetchContactError","addContactRequrest","addContactSuccess","addContactError","deleteContactRequrest","deleteContactSuccess","deleteContactError","changeFilterName","contactsOperations","fetchContact","dispatch","axios","get","then","data","catch","error","message","addContact","number","contact","post","deleteContact","id","delete","getContacts","items","getFilter","filter","contactsSelectors","getLoding","getError","getVisibleContact","createSelector","console","log","normalizedFilter","toLowerCase","includes","createReducer","_","payload","combineReducers","children","registerRequest","registerSuccess","registerError","loginRequest","loginSuccess","loginError","logoutRequest","logoutSuccess","logoutError","getCurrentUserRequest","getCurrentUserSuccess","getCurrentUserError","defaults","baseURL","token","headers","common","Authorization","credentials","a","authActions","response","logIn","getState","persistedToken","initialUserState","email","user"],"mappings":"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","file":"static/js/main.132892b5.chunk.js","sourcesContent":["import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\r\nimport logger from 'redux-logger';\r\nimport {\r\n  persistStore,\r\n  persistReducer,\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from 'redux-persist';\r\nimport storage from 'redux-persist/lib/storage';\r\nimport { contactReducer } from './contacts';\r\nimport { authReducer } from './auth';\r\n\r\nconst middleware = [\r\n  ...getDefaultMiddleware({\r\n    serializableCheck: {\r\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n    },\r\n  }),\r\n  logger,\r\n];\r\n\r\nconst authPersistConfig = {\r\n  key: 'auth',\r\n  storage,\r\n  whitelist: ['token'],\r\n};\r\nconst store = configureStore({\r\n  reducer: {\r\n    auth: persistReducer(authPersistConfig, authReducer),\r\n\r\n    contacts: contactReducer,\r\n  },\r\n  middleware,\r\n  devTools: process.env.NODE_ENV === 'development',\r\n});\r\nconst persistor = persistStore(store);\r\n\r\n// eslint-disable-next-line\r\nexport default { store, persistor };\r\n\r\n//const persistor = persistStore(store);\r\n// eslint-disable-next-line\r\n//export default { store, persistor };\r\n/*const middleware = getDefaultMiddleware =>\r\n  getDefaultMiddleware().concat(logger);\r\nconst store = configureStore({\r\n  reducer: {\r\n    contacts: contactReducer,\r\n  },\r\n  devTools: process.env.NODE_ENV === 'development',\r\n  middleware,\r\n});*/\r\n","const routes = {\r\n  home: '/',\r\n  contacts: '/contacts',\r\n  register: '/register',\r\n  login: '/login',\r\n};\r\n\r\nexport default routes;\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { authSelectors } from '../../redux/auth';\r\nimport routes from '../../routes';\r\nimport styles from './Navigation.module.css';\r\nconst { home, contacts } = routes;\r\n\r\nconst Navigation = ({ isAuthenticated }) => (\r\n  <nav>\r\n    <NavLink\r\n      to={home}\r\n      exact\r\n      className={styles.link}\r\n      activeClassName={styles.activeLink}\r\n    >\r\n      Home\r\n    </NavLink>\r\n\r\n    {isAuthenticated && (\r\n      <NavLink\r\n        to={contacts}\r\n        exact\r\n        style={styles.link}\r\n        activeStyle={styles.activeLink}\r\n      >\r\n        Phonebook\r\n      </NavLink>\r\n    )}\r\n  </nav>\r\n);\r\n\r\nconst mapStateToProps = state => ({\r\n  isAuthenticated: authSelectors.getIsAuthenticated(state),\r\n});\r\n\r\nexport default connect(mapStateToProps)(Navigation);\r\n","export default __webpack_public_path__ + \"static/media/default-avatar.e44fc4e2.png\";","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { authSelectors, authOperations } from '../../redux/auth';\r\nimport defaultAvatar from './default-avatar.png';\r\nimport Button from '@material-ui/core/Button';\r\nimport styles from './UseMenu.module.css';\r\n\r\nconst UserMenu = ({ avatar, name, onLogout }) => (\r\n  <div className={styles.container}>\r\n    <img src={avatar} alt=\"\" width=\"32\" className={styles.avatar} />\r\n    <span className={styles.name}>Welcome, {name}</span>\r\n    <Button\r\n      type=\"button\"\r\n      variant=\"contained\"\r\n      color=\"primary\"\r\n      onClick={onLogout}\r\n    >\r\n      Logout\r\n    </Button>\r\n  </div>\r\n);\r\n\r\nconst mapStateToProps = state => ({\r\n  name: authSelectors.getUserName(state),\r\n  avatar: defaultAvatar,\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  onLogout: authOperations.logOut,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(UserMenu);\r\n","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport routes from '../../routes';\r\nimport styles from './AuthNav.module.css';\r\nconst { register, login } = routes;\r\n\r\nconst AuthNav = () => (\r\n  <div>\r\n    <NavLink\r\n      to={register}\r\n      exact\r\n      className={styles.link}\r\n      activeClassName={styles.activeLink}\r\n    >\r\n      Authorization\r\n    </NavLink>\r\n    <NavLink\r\n      to={login}\r\n      exact\r\n      className={styles.link}\r\n      activeClassName={styles.activeLink}\r\n    >\r\n      Login\r\n    </NavLink>\r\n  </div>\r\n);\r\n\r\nexport default AuthNav;\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Navigation from '../Navigation/Navigation';\r\nimport UserMenu from '../UserMenu/UserMenu';\r\nimport AuthNav from '../AuthNav/AuthNav';\r\nimport { authSelectors } from '../../redux/auth';\r\nimport styles from './AppBar.module.css';\r\n\r\nconst AppBar = ({ isAuthenticated }) => (\r\n  <header className={styles.header}>\r\n    <Navigation />\r\n    {isAuthenticated ? <UserMenu /> : <AuthNav />}\r\n  </header>\r\n);\r\n\r\nconst mapStateToProps = state => ({\r\n  isAuthenticated: authSelectors.getIsAuthenticated(state),\r\n});\r\n\r\n/*const mapDispatchToProps = {};*/\r\n\r\nexport default connect(mapStateToProps)(AppBar);\r\n","import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { authSelectors } from '../redux/auth';\r\n\r\n/**\r\n * - Если маршрут приватный и пользователь залогинен, рендерит компонент\r\n * - В противном случае рендерит Redirect на /login\r\n */\r\nconst PrivateRoute = ({\r\n  component: Component,\r\n  isAuthenticated,\r\n  redirectTo,\r\n  ...routeProps\r\n}) => (\r\n  <Route\r\n    {...routeProps}\r\n    render={props =>\r\n      isAuthenticated ? <Component {...props} /> : <Redirect to={redirectTo} />\r\n    }\r\n  />\r\n);\r\n\r\nconst mapStateToProps = state => ({\r\n  isAuthenticated: authSelectors.getIsAuthenticated(state),\r\n});\r\n\r\nexport default connect(mapStateToProps)(PrivateRoute);\r\n","import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { authSelectors } from '../redux/auth';\r\n\r\n/**\r\n * - Если маршрут ограниченный, и пользователь залогинен, рендерит редирект на /todos\r\n * - В противном случае рендерит компонент\r\n */\r\nconst PublicRoute = ({\r\n  component: Component,\r\n  isAuthenticated,\r\n  redirectTo,\r\n  ...routeProps\r\n}) => (\r\n  <Route\r\n    {...routeProps}\r\n    render={props =>\r\n      isAuthenticated && routeProps.restricted ? (\r\n        <Redirect to={redirectTo} />\r\n      ) : (\r\n        <Component {...props} />\r\n      )\r\n    }\r\n  />\r\n);\r\n\r\nconst mapStateToProps = state => ({\r\n  isAuthenticated: authSelectors.getIsAuthenticated(state),\r\n});\r\n\r\nexport default connect(mapStateToProps)(PublicRoute);\r\n","import React, { Component, Suspense, lazy } from 'react';\r\nimport { Switch } from 'react-router-dom';\r\nimport Container from './components/Container';\r\nimport AppBar from './components/AppBar';\r\nimport { connect } from 'react-redux';\r\n//import { contactsSelectors, contactsOperations } from './redux/contacts';\r\nimport { authOperations } from './redux/auth';\r\nimport PrivateRoute from './components/PrivateRoute';\r\nimport PublicRoute from './components/PublicRoute';\r\nimport routes from './routes';\r\nconst HomePage = lazy(() => import('./pages/HomePage'));\r\nconst RegisterPage = lazy(() => import('./pages/RegisterPage'));\r\nconst LoginPage = lazy(() => import('./pages/LoginPage'));\r\nconst ContactsPage = lazy(() => import('./pages/ContactsPage'));\r\n\r\nconst { home, contacts, register, login } = routes;\r\nclass App extends Component {\r\n  componentDidMount() {\r\n    this.props.onGetCurretnUser();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Container>\r\n        <AppBar />\r\n\r\n        <Suspense fallback={<div>Loading...</div>}>\r\n          <Switch>\r\n            <PublicRoute exact path={home} component={HomePage} />\r\n            <PublicRoute\r\n              path={register}\r\n              restricted\r\n              redirectTo={contacts}\r\n              component={RegisterPage}\r\n            />\r\n            <PublicRoute\r\n              exact\r\n              path={login}\r\n              restricted\r\n              redirectTo={contacts}\r\n              component={LoginPage}\r\n            />\r\n            <PrivateRoute\r\n              path={contacts}\r\n              component={ContactsPage}\r\n              redirectTo={login}\r\n            />\r\n            <PublicRoute component={HomePage} />\r\n          </Switch>\r\n        </Suspense>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  onGetCurretnUser: authOperations.getCurrentUser,\r\n};\r\n\r\nexport default connect(null, mapDispatchToProps)(App);\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport { Provider } from 'react-redux';\r\nimport { PersistGate } from 'redux-persist/integration/react';\r\nimport store from './redux/store';\r\nimport App from './App';\r\nimport 'modern-normalize/modern-normalize.css';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store.store}>\r\n      <PersistGate loading={null} persistor={store.persistor}>\r\n        <BrowserRouter>\r\n          <App />\r\n        </BrowserRouter>\r\n      </PersistGate>\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"link\":\"Navigation_link__1RrtQ\",\"activeLink\":\"Navigation_activeLink__JuJSJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"link\":\"AuthNav_link__1x85v\",\"activeLink\":\"AuthNav_activeLink__HFOYe\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"UseMenu_container__2Pmi9\",\"avatar\":\"UseMenu_avatar__1fUAf\",\"name\":\"UseMenu_name__1QTWV\"};","//import { v4 as uuid } from 'uuid';\r\nimport { createAction } from '@reduxjs/toolkit';\r\n\r\nexport const fetchContactRequrest = createAction(\r\n  'contacts/fetchContactRequrest',\r\n);\r\nexport const fetchContactSuccess = createAction('contacts/fetchContactSuccess');\r\nexport const fetchContactError = createAction('contacts/fetchContactError');\r\n\r\nexport const addContactRequrest = createAction('contacts/addContactRequrest');\r\nexport const addContactSuccess = createAction('contacts/addContactSuccess');\r\nexport const addContactError = createAction('contacts/addContactError');\r\n\r\n//export const deleteContact = createAction('contacts/delete');\r\nexport const deleteContactRequrest = createAction(\r\n  'contacts/deleteContactRequrest',\r\n);\r\nexport const deleteContactSuccess = createAction(\r\n  'contacts/deleteContactSuccess',\r\n);\r\nexport const deleteContactError = createAction('contacts/deleteContactError');\r\n\r\nexport const changeFilterName = createAction('contacts/filter');\r\n\r\n/*\r\nconst contactActions = {\r\n  fetchContactRequrest,\r\n  fetchContactSuccess,\r\n  fetchContactError,\r\n  addContactRequrest,\r\n  addContactSuccess,\r\n  addContactError,\r\n  deleteContactRequrest,\r\n  deleteContactSuccess,\r\n  deleteContactError,\r\n  changeFilterName,\r\n};\r\n\r\n\r\nexport default contactActions;*/\r\n","import axios from 'axios';\r\nimport {\r\n  fetchContactRequrest,\r\n  fetchContactSuccess,\r\n  fetchContactError,\r\n  addContactRequrest,\r\n  addContactSuccess,\r\n  addContactError,\r\n  deleteContactRequrest,\r\n  deleteContactSuccess,\r\n  deleteContactError,\r\n} from './contact-actions';\r\n\r\n//axios.defaults.baseURL = 'https://goit-phonebook-api.herokuapp.com';\r\n\r\n/*const asyncActionCreator = args => dispatch => {\r\n  // можно диспачить http запросы\r\n};*/\r\n\r\n/*const fetchContact = () => async dispatch => {\r\n  dispatch(fetchContactRequest());\r\n\r\n  try {\r\n    const { data } = await axios.get('/todos');\r\n\r\n    dispatch(fetchContactSuccess(data));\r\n  } catch (error) {\r\n    dispatch(fetchContactError(error));\r\n  }*/\r\n\r\nconst fetchContact = () => dispatch => {\r\n  dispatch(fetchContactRequrest());\r\n  axios\r\n    .get('/contacts')\r\n    .then(({ data }) => dispatch(fetchContactSuccess(data)))\r\n    .catch(error => dispatch(fetchContactError(error.message)));\r\n};\r\n\r\nconst addContact = (name, number) => dispatch => {\r\n  const contact = {\r\n    name,\r\n    number,\r\n  };\r\n  //dispatch({ type: 'contacts/addContactRequrest' });\r\n  dispatch(addContactRequrest());\r\n\r\n  axios\r\n    .post('/contacts', contact)\r\n    .then(\r\n      //dispatch({ type: 'contacts/addContactSuccess', paload: data }),\r\n      ({ data }) => dispatch(addContactSuccess(data)),\r\n    )\r\n    .catch(error => dispatch(addContactError(error.message)));\r\n};\r\n\r\nconst deleteContact = id => dispatch => {\r\n  dispatch(deleteContactRequrest());\r\n\r\n  axios\r\n    .delete(`/contacts/${id}`)\r\n    .then(() => {\r\n      dispatch(deleteContactSuccess(id));\r\n    })\r\n    .catch(error => dispatch(deleteContactError(error.message)));\r\n};\r\n\r\nconst contactsOperations = {\r\n  fetchContact,\r\n  addContact,\r\n  deleteContact,\r\n};\r\nexport default contactsOperations;\r\n","import { createSelector } from '@reduxjs/toolkit';\r\n\r\nconst getContacts = state => state.contacts.items;\r\nconst getFilter = state => state.contacts.filter;\r\nconst getLoding = state => state.contacts.loading;\r\nconst getError = state => state.contacts.error;\r\n\r\n/*const getVisibleContacts = state => {\r\n  const contacts = getContacts(state);\r\n  const filter = getFilter(state);\r\n  const normolizedFilter = filter.toLowerCase();\r\n\r\n  return contacts.filter(({ name }) =>\r\n    name.toLowerCase().includes(normolizedFilter),\r\n  );\r\n};*/\r\n//МЕМОИЗАЦИЯ\r\n/*const getNormolizedFilter = state => {\r\n  const filter = getFilter(state);\r\n\r\n  return filter.toLowerCase(state);\r\n};\r\nconst getVisibleContacts = createSelector(\r\n  [getContacts, getNormolizedFilter],\r\n  (contacts, normolizedFilter) => {\r\n    debugger;\r\n    contacts.filter(contacts =>\r\n      contacts.name.toLowerCase().includes(normolizedFilter),\r\n    );\r\n  },\r\n);*/\r\n\r\nconst getVisibleContact = createSelector(\r\n  [getContacts, getFilter],\r\n  (contacts, filter) => {\r\n    console.log('новый массив видимых контактов');\r\n    const normalizedFilter = filter.toLowerCase();\r\n    return contacts.filter(({ name }) =>\r\n      name.toLowerCase().includes(normalizedFilter),\r\n    );\r\n  },\r\n);\r\nconst contactsSelectors = {\r\n  getContacts,\r\n  getFilter,\r\n  getLoding,\r\n  getError,\r\n  getVisibleContact,\r\n};\r\nexport default contactsSelectors;\r\n","import { combineReducers } from 'redux';\r\nimport { createReducer } from '@reduxjs/toolkit';\r\n//import { contactActions } from './contact-actions';\r\nimport {\r\n  addContactRequrest,\r\n  addContactSuccess,\r\n  addContactError,\r\n  deleteContactRequrest,\r\n  deleteContactSuccess,\r\n  deleteContactError,\r\n  fetchContactRequrest,\r\n  fetchContactSuccess,\r\n  fetchContactError,\r\n  changeFilterName,\r\n} from './contact-actions';\r\n\r\nconst items = createReducer([], {\r\n  [fetchContactSuccess]: (_, { payload }) => payload,\r\n  [addContactSuccess]: (state, { payload }) => [...state, payload],\r\n  [deleteContactSuccess]: (state, { payload }) =>\r\n    state.filter(({ id }) => id !== payload),\r\n});\r\n\r\nconst filter = createReducer('', {\r\n  [changeFilterName]: (_, { payload }) => payload,\r\n});\r\n\r\nconst loading = createReducer(false, {\r\n  [fetchContactRequrest]: () => true,\r\n  [fetchContactSuccess]: () => false,\r\n  [fetchContactError]: () => false,\r\n  [addContactRequrest]: () => true,\r\n  [addContactSuccess]: () => false,\r\n  [addContactError]: () => false,\r\n  [deleteContactRequrest]: () => true,\r\n  [deleteContactSuccess]: () => false,\r\n  [deleteContactError]: () => false,\r\n});\r\nconst error = createReducer('', {\r\n  [fetchContactError]: (_, { payload }) => payload,\r\n  [addContactError]: (_, { payload }) => payload,\r\n  [deleteContactError]: (_, { payload }) => payload,\r\n});\r\n\r\nexport default combineReducers({\r\n  items,\r\n  filter,\r\n  loading,\r\n  error,\r\n});\r\n","import React from 'react';\r\nimport styles from './Container.module.css';\r\n\r\nconst Container = ({ children }) => (\r\n  <div className={styles.Container}>{children}</div>\r\n);\r\n\r\nexport default Container;\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"Container_Container__1SA48\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"AppBar_header__Yd86L\"};","import { createAction } from '@reduxjs/toolkit';\r\n\r\nconst registerRequest = createAction('auth/registerRequest');\r\nconst registerSuccess = createAction('auth/registerSuccess');\r\nconst registerError = createAction('auth/registerError');\r\n\r\nconst loginRequest = createAction('auth/loginRequest');\r\nconst loginSuccess = createAction('auth/loginSuccess');\r\nconst loginError = createAction('auth/loginError');\r\n\r\nconst logoutRequest = createAction('auth/logoutRequest');\r\nconst logoutSuccess = createAction('auth/logoutSuccess');\r\nconst logoutError = createAction('auth/logoutError');\r\n\r\nconst getCurrentUserRequest = createAction('auth/getCurrentUserRequest');\r\nconst getCurrentUserSuccess = createAction('auth/getCurrentUserSuccess');\r\nconst getCurrentUserError = createAction('auth/getCurrentUserError');\r\n\r\n/*const authActions = {\r\n  registerRequest,\r\n  registerSuccess,\r\n  registerError,\r\n  loginRequest,\r\n  loginSuccess,\r\n  loginError,\r\n  logoutRequest,\r\n  logoutSuccess,\r\n  logoutError,\r\n  getCurrentUserRequest,\r\n  getCurrentUserSuccess,\r\n  getCurrentUserError,\r\n};\r\nexport default authActions;*/\r\n\r\n// eslint-disable-next-line\r\nexport default {\r\n  registerRequest,\r\n  registerSuccess,\r\n  registerError,\r\n  loginRequest,\r\n  loginSuccess,\r\n  loginError,\r\n  logoutRequest,\r\n  logoutSuccess,\r\n  logoutError,\r\n  getCurrentUserRequest,\r\n  getCurrentUserSuccess,\r\n  getCurrentUserError,\r\n};\r\n","import axios from 'axios';\r\nimport authActions from './auth-actions';\r\n\r\naxios.defaults.baseURL = 'https://goit-phonebook-api.herokuapp.com';\r\n// eslint-disable-next-line\r\nconst token = {\r\n  set(token) {\r\n    axios.defaults.headers.common.Authorization = `Bearer ${token}`;\r\n  },\r\n  unset() {\r\n    axios.defaults.headers.common.Authorization = '';\r\n  },\r\n};\r\n\r\n/*const register = credentials => dispatch => {\r\n  dispatch(authActions.registerRequest());\r\n  axios.post('/users/signup', credentials);\r\n};*/\r\n/*POST @ /users/signup\r\n * body { name, email, password }*/\r\nconst register = credentials => async dispatch => {\r\n  dispatch(authActions.registerRequest());\r\n\r\n  try {\r\n    const response = await axios.post('/users/signup', credentials);\r\n\r\n    //console.log(response);\r\n\r\n    token.set(response.data.token);\r\n    dispatch(authActions.registerSuccess(response.data));\r\n  } catch (error) {\r\n    dispatch(authActions.registerError(error.message));\r\n  }\r\n};\r\n// axsios.post('/');\r\nconst logIn = credentials => async dispatch => {\r\n  dispatch(authActions.loginRequest());\r\n  try {\r\n    const response = await axios.post('/users/login', credentials);\r\n    // console.log(response);\r\n\r\n    token.set(response.data.token);\r\n    dispatch(authActions.loginSuccess(response.data));\r\n  } catch (error) {\r\n    dispatch(authActions.loginError(error.message));\r\n  }\r\n};\r\n\r\nconst logOut = () => async dispatch => {\r\n  dispatch(authActions.logoutRequest());\r\n  try {\r\n    await axios.post('/users/logout');\r\n\r\n    token.unset();\r\n    dispatch(authActions.logoutSuccess());\r\n  } catch (error) {\r\n    dispatch(authActions.logoutError(error.message));\r\n  }\r\n};\r\n\r\nconst getCurrentUser = () => async (dispatch, getState) => {\r\n  const {\r\n    auth: { token: persistedToken },\r\n  } = getState();\r\n\r\n  if (!persistedToken) {\r\n    return;\r\n  }\r\n\r\n  token.set(persistedToken);\r\n  dispatch(authActions.getCurrentUserRequest());\r\n\r\n  try {\r\n    const response = await axios.get('/users/current');\r\n\r\n    dispatch(authActions.getCurrentUserSuccess(response.data));\r\n  } catch (error) {\r\n    dispatch(authActions.getCurrentUserError(error.message));\r\n  }\r\n};\r\n\r\n// eslint-disable-next-line\r\nexport default { register, logIn, logOut, getCurrentUser };\r\n","import { combineReducers } from 'redux';\r\nimport { createReducer } from '@reduxjs/toolkit';\r\nimport authActions from './auth-actions';\r\n\r\nconst initialUserState = { name: null, email: null };\r\n\r\nconst user = createReducer(initialUserState, {\r\n  [authActions.registerSuccess]: (_, { payload }) => payload.user, //user,token, пришли c authOperations response.data\r\n  [authActions.loginSuccess]: (_, { payload }) => payload.user,\r\n  [authActions.logoutSuccess]: () => initialUserState,\r\n  [authActions.getCurrentUserSuccess]: (_, { payload }) => payload,\r\n});\r\n\r\nconst token = createReducer(null, {\r\n  [authActions.registerSuccess]: (_, { payload }) => payload.token,\r\n  [authActions.loginSuccess]: (_, { payload }) => payload.token,\r\n  [authActions.logoutSuccess]: () => null,\r\n});\r\n//const setError = (_,{ payload }) => payload;//можно абстрагировать\r\nconst error = createReducer(null, {\r\n  [authActions.registerError]: (_, { payload }) => payload,\r\n  [authActions.loginError]: (_, { payload }) => payload,\r\n  [authActions.logoutError]: (_, { payload }) => payload,\r\n  [authActions.getCurrentUserError]: (_, { payload }) => payload,\r\n});\r\n\r\nconst isAuthenticated = createReducer(false, {\r\n  [authActions.registerSuccess]: () => true,\r\n  [authActions.loginSuccess]: () => true,\r\n  [authActions.getCurrentUserSuccess]: () => true,\r\n  [authActions.registerError]: () => false,\r\n  [authActions.loginError]: () => false,\r\n  [authActions.getCurrentUserError]: () => false,\r\n  [authActions.logoutSuccess]: () => false,\r\n});\r\n\r\nexport default combineReducers({\r\n  user,\r\n  isAuthenticated,\r\n  token,\r\n  error,\r\n});\r\n/*{\r\n  \"name\": \"Adrian Cross\",\r\n  \"email\": \"across@mail.com\",\r\n  \"password\": \"examplepassword\"\r\n}*/\r\n","const getIsAuthenticated = state => state.auth.isAuthenticated;\r\n\r\nconst getUserName = state => state.auth.user.name;\r\n\r\n// eslint-disable-next-line\r\nexport default {\r\n  getIsAuthenticated,\r\n  getUserName,\r\n};\r\n"],"sourceRoot":""}