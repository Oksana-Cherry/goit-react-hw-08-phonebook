{"version":3,"sources":["redux/contacts/contact-actions.js","redux/contacts/contect-operations.js","redux/contacts/contact-selectors.js","redux/contacts/contact-reducer.js","components/Container/Container.js","components/Container/Container.module.css","components/AppBar/AppBar.module.css","redux/auth/auth-actions.js","redux/auth/auth-operations.js","redux/auth/auth-reducer.js","redux/auth/auth-selectors.js","redux/store.js","routes.js","components/Navigation/Navigation.js","components/UserMenu/default-avatar.png","components/UserMenu/UserMenu.js","components/AuthNav/AuthNav.js","components/AppBar/AppBar.js","components/PrivateRoute.js","components/PublicRoute.js","App.js","index.js"],"names":["fetchContactRequrest","createAction","fetchContactSuccess","fetchContactError","addContactRequrest","addContactSuccess","addContactError","deleteContactRequrest","deleteContactSuccess","deleteContactError","changeFilterName","contactsOperations","fetchContact","dispatch","axios","get","then","data","catch","error","message","addContact","name","number","contact","post","deleteContact","id","delete","getContacts","state","contacts","items","getFilter","filter","contactsSelectors","getLoding","loading","getError","getVisibleContact","createSelector","console","log","normalizedFilter","toLowerCase","includes","createReducer","_","payload","combineReducers","Container","children","className","styles","module","exports","registerRequest","registerSuccess","registerError","loginRequest","loginSuccess","loginError","logoutRequest","logoutSuccess","logoutError","getCurrentUserRequest","getCurrentUserSuccess","getCurrentUserError","defaults","baseURL","token","headers","common","Authorization","register","credentials","a","authActions","response","logIn","logOut","getCurrentUser","getState","persistedToken","auth","initialUserState","email","user","isAuthenticated","getIsAuthenticated","getUserName","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","authPersistConfig","key","storage","whitelist","store","configureStore","reducer","persistReducer","authReducer","contactReducer","devTools","process","persistor","persistStore","routes","home","login","link","display","textDecoration","padding","fontWeight","color","activeLink","connect","authSelectors","to","exact","style","activeStyle","container","alignItems","avatar","marginRight","mapDispatchToProps","onLogout","authOperations","defaultAvatar","src","alt","width","Button","type","variant","onClick","AuthNav","header","Component","component","redirectTo","routeProps","render","props","restricted","HomePage","lazy","RegisterPage","LoginPage","ContactsPage","App","this","onGetCurretnUser","fallback","path","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a37a2fd3.chunk.js","sourcesContent":["//import { v4 as uuid } from 'uuid';\r\nimport { createAction } from '@reduxjs/toolkit';\r\n\r\nexport const fetchContactRequrest = createAction(\r\n  'contacts/fetchContactRequrest',\r\n);\r\nexport const fetchContactSuccess = createAction('contacts/fetchContactSuccess');\r\nexport const fetchContactError = createAction('contacts/fetchContactError');\r\n\r\nexport const addContactRequrest = createAction('contacts/addContactRequrest');\r\nexport const addContactSuccess = createAction('contacts/addContactSuccess');\r\nexport const addContactError = createAction('contacts/addContactError');\r\n\r\n//export const deleteContact = createAction('contacts/delete');\r\nexport const deleteContactRequrest = createAction(\r\n  'contacts/deleteContactRequrest',\r\n);\r\nexport const deleteContactSuccess = createAction(\r\n  'contacts/deleteContactSuccess',\r\n);\r\nexport const deleteContactError = createAction('contacts/deleteContactError');\r\n\r\nexport const changeFilterName = createAction('contacts/filter');\r\n\r\n/*\r\nconst contactActions = {\r\n  fetchContactRequrest,\r\n  fetchContactSuccess,\r\n  fetchContactError,\r\n  addContactRequrest,\r\n  addContactSuccess,\r\n  addContactError,\r\n  deleteContactRequrest,\r\n  deleteContactSuccess,\r\n  deleteContactError,\r\n  changeFilterName,\r\n};\r\n\r\n\r\nexport default contactActions;*/\r\n","import axios from 'axios';\r\nimport {\r\n  fetchContactRequrest,\r\n  fetchContactSuccess,\r\n  fetchContactError,\r\n  addContactRequrest,\r\n  addContactSuccess,\r\n  addContactError,\r\n  deleteContactRequrest,\r\n  deleteContactSuccess,\r\n  deleteContactError,\r\n} from './contact-actions';\r\n\r\n//axios.defaults.baseURL = 'https://goit-phonebook-api.herokuapp.com';\r\n\r\n/*const asyncActionCreator = args => dispatch => {\r\n  // можно диспачить http запросы\r\n};*/\r\n\r\n/*const fetchContact = () => async dispatch => {\r\n  dispatch(fetchContactRequest());\r\n\r\n  try {\r\n    const { data } = await axios.get('/todos');\r\n\r\n    dispatch(fetchContactSuccess(data));\r\n  } catch (error) {\r\n    dispatch(fetchContactError(error));\r\n  }*/\r\n\r\nconst fetchContact = () => dispatch => {\r\n  dispatch(fetchContactRequrest());\r\n  axios\r\n    .get('/contacts')\r\n    .then(({ data }) => dispatch(fetchContactSuccess(data)))\r\n    .catch(error => dispatch(fetchContactError(error.message)));\r\n};\r\n\r\nconst addContact = (name, number) => dispatch => {\r\n  const contact = {\r\n    name,\r\n    number,\r\n  };\r\n  //dispatch({ type: 'contacts/addContactRequrest' });\r\n  dispatch(addContactRequrest());\r\n\r\n  axios\r\n    .post('/contacts', contact)\r\n    .then(\r\n      //dispatch({ type: 'contacts/addContactSuccess', paload: data }),\r\n      ({ data }) => dispatch(addContactSuccess(data)),\r\n    )\r\n    .catch(error => dispatch(addContactError(error.message)));\r\n};\r\n\r\nconst deleteContact = id => dispatch => {\r\n  dispatch(deleteContactRequrest());\r\n\r\n  axios\r\n    .delete(`/contacts/${id}`)\r\n    .then(() => {\r\n      dispatch(deleteContactSuccess(id));\r\n    })\r\n    .catch(error => dispatch(deleteContactError(error.message)));\r\n};\r\n\r\nconst contactsOperations = {\r\n  fetchContact,\r\n  addContact,\r\n  deleteContact,\r\n};\r\nexport default contactsOperations;\r\n","import { createSelector } from '@reduxjs/toolkit';\r\n\r\nconst getContacts = state => state.contacts.items;\r\nconst getFilter = state => state.contacts.filter;\r\nconst getLoding = state => state.contacts.loading;\r\nconst getError = state => state.contacts.error;\r\n\r\n/*const getVisibleContacts = state => {\r\n  const contacts = getContacts(state);\r\n  const filter = getFilter(state);\r\n  const normolizedFilter = filter.toLowerCase();\r\n\r\n  return contacts.filter(({ name }) =>\r\n    name.toLowerCase().includes(normolizedFilter),\r\n  );\r\n};*/\r\n//МЕМОИЗАЦИЯ\r\n/*const getNormolizedFilter = state => {\r\n  const filter = getFilter(state);\r\n\r\n  return filter.toLowerCase(state);\r\n};\r\nconst getVisibleContacts = createSelector(\r\n  [getContacts, getNormolizedFilter],\r\n  (contacts, normolizedFilter) => {\r\n    debugger;\r\n    contacts.filter(contacts =>\r\n      contacts.name.toLowerCase().includes(normolizedFilter),\r\n    );\r\n  },\r\n);*/\r\n\r\nconst getVisibleContact = createSelector(\r\n  [getContacts, getFilter],\r\n  (contacts, filter) => {\r\n    console.log('новый массив видимых контактов');\r\n    const normalizedFilter = filter.toLowerCase();\r\n    return contacts.filter(({ name }) =>\r\n      name.toLowerCase().includes(normalizedFilter),\r\n    );\r\n  },\r\n);\r\nconst contactsSelectors = {\r\n  getContacts,\r\n  getFilter,\r\n  getLoding,\r\n  getError,\r\n  getVisibleContact,\r\n};\r\nexport default contactsSelectors;\r\n","import { combineReducers } from 'redux';\r\nimport { createReducer } from '@reduxjs/toolkit';\r\n//import { contactActions } from './contact-actions';\r\nimport {\r\n  addContactRequrest,\r\n  addContactSuccess,\r\n  addContactError,\r\n  deleteContactRequrest,\r\n  deleteContactSuccess,\r\n  deleteContactError,\r\n  fetchContactRequrest,\r\n  fetchContactSuccess,\r\n  fetchContactError,\r\n  changeFilterName,\r\n} from './contact-actions';\r\n\r\nconst items = createReducer([], {\r\n  [fetchContactSuccess]: (_, { payload }) => payload,\r\n  [addContactSuccess]: (state, { payload }) => [...state, payload],\r\n  [deleteContactSuccess]: (state, { payload }) =>\r\n    state.filter(({ id }) => id !== payload),\r\n});\r\n\r\nconst filter = createReducer('', {\r\n  [changeFilterName]: (_, { payload }) => payload,\r\n});\r\n\r\nconst loading = createReducer(false, {\r\n  [fetchContactRequrest]: () => true,\r\n  [fetchContactSuccess]: () => false,\r\n  [fetchContactError]: () => false,\r\n  [addContactRequrest]: () => true,\r\n  [addContactSuccess]: () => false,\r\n  [addContactError]: () => false,\r\n  [deleteContactRequrest]: () => true,\r\n  [deleteContactSuccess]: () => false,\r\n  [deleteContactError]: () => false,\r\n});\r\nconst error = createReducer('', {\r\n  [fetchContactError]: (_, { payload }) => payload,\r\n  [addContactError]: (_, { payload }) => payload,\r\n  [deleteContactError]: (_, { payload }) => payload,\r\n});\r\n\r\nexport default combineReducers({\r\n  items,\r\n  filter,\r\n  loading,\r\n  error,\r\n});\r\n","import React from 'react';\r\nimport styles from './Container.module.css';\r\n\r\nconst Container = ({ children }) => (\r\n  <div className={styles.Container}>{children}</div>\r\n);\r\n\r\nexport default Container;\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"Container_Container__1SA48\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"AppBar_header__Yd86L\"};","import { createAction } from '@reduxjs/toolkit';\r\n\r\nconst registerRequest = createAction('auth/registerRequest');\r\nconst registerSuccess = createAction('auth/registerSuccess');\r\nconst registerError = createAction('auth/registerError');\r\n\r\nconst loginRequest = createAction('auth/loginRequest');\r\nconst loginSuccess = createAction('auth/loginSuccess');\r\nconst loginError = createAction('auth/loginError');\r\n\r\nconst logoutRequest = createAction('auth/logoutRequest');\r\nconst logoutSuccess = createAction('auth/logoutSuccess');\r\nconst logoutError = createAction('auth/logoutError');\r\n\r\nconst getCurrentUserRequest = createAction('auth/getCurrentUserRequest');\r\nconst getCurrentUserSuccess = createAction('auth/getCurrentUserSuccess');\r\nconst getCurrentUserError = createAction('auth/getCurrentUserError');\r\n\r\n/*const authActions = {\r\n  registerRequest,\r\n  registerSuccess,\r\n  registerError,\r\n  loginRequest,\r\n  loginSuccess,\r\n  loginError,\r\n  logoutRequest,\r\n  logoutSuccess,\r\n  logoutError,\r\n  getCurrentUserRequest,\r\n  getCurrentUserSuccess,\r\n  getCurrentUserError,\r\n};\r\nexport default authActions;*/\r\n\r\n// eslint-disable-next-line\r\nexport default {\r\n  registerRequest,\r\n  registerSuccess,\r\n  registerError,\r\n  loginRequest,\r\n  loginSuccess,\r\n  loginError,\r\n  logoutRequest,\r\n  logoutSuccess,\r\n  logoutError,\r\n  getCurrentUserRequest,\r\n  getCurrentUserSuccess,\r\n  getCurrentUserError,\r\n};\r\n","import axios from 'axios';\r\nimport authActions from './auth-actions';\r\n\r\naxios.defaults.baseURL = 'https://goit-phonebook-api.herokuapp.com';\r\n// eslint-disable-next-line\r\nconst token = {\r\n  set(token) {\r\n    axios.defaults.headers.common.Authorization = `Bearer ${token}`;\r\n  },\r\n  unset() {\r\n    axios.defaults.headers.common.Authorization = '';\r\n  },\r\n};\r\n\r\n/*const register = credentials => dispatch => {\r\n  dispatch(authActions.registerRequest());\r\n  axios.post('/users/signup', credentials);\r\n};*/\r\n/*POST @ /users/signup\r\n * body { name, email, password }*/\r\nconst register = credentials => async dispatch => {\r\n  dispatch(authActions.registerRequest());\r\n\r\n  try {\r\n    const response = await axios.post('/users/signup', credentials);\r\n\r\n    //console.log(response);\r\n\r\n    token.set(response.data.token);\r\n    dispatch(authActions.registerSuccess(response.data));\r\n  } catch (error) {\r\n    dispatch(authActions.registerError(error.message));\r\n  }\r\n};\r\n// axsios.post('/');\r\nconst logIn = credentials => async dispatch => {\r\n  dispatch(authActions.loginRequest());\r\n  try {\r\n    const response = await axios.post('/users/login', credentials);\r\n    // console.log(response);\r\n\r\n    token.set(response.data.token);\r\n    dispatch(authActions.loginSuccess(response.data));\r\n  } catch (error) {\r\n    dispatch(authActions.loginError(error.message));\r\n  }\r\n};\r\n\r\nconst logOut = () => async dispatch => {\r\n  dispatch(authActions.logoutRequest());\r\n  try {\r\n    await axios.post('/users/logout');\r\n\r\n    token.unset();\r\n    dispatch(authActions.logoutSuccess());\r\n  } catch (error) {\r\n    dispatch(authActions.logoutError(error.message));\r\n  }\r\n};\r\n\r\nconst getCurrentUser = () => async (dispatch, getState) => {\r\n  const {\r\n    auth: { token: persistedToken },\r\n  } = getState();\r\n\r\n  if (!persistedToken) {\r\n    return;\r\n  }\r\n\r\n  token.set(persistedToken);\r\n  dispatch(authActions.getCurrentUserRequest());\r\n\r\n  try {\r\n    const response = await axios.get('/users/current');\r\n\r\n    dispatch(authActions.getCurrentUserSuccess(response.data));\r\n  } catch (error) {\r\n    dispatch(authActions.getCurrentUserError(error.message));\r\n  }\r\n};\r\n\r\n// eslint-disable-next-line\r\nexport default { register, logIn, logOut, getCurrentUser };\r\n","import { combineReducers } from 'redux';\r\nimport { createReducer } from '@reduxjs/toolkit';\r\nimport authActions from './auth-actions';\r\n\r\nconst initialUserState = { name: null, email: null };\r\n\r\nconst user = createReducer(initialUserState, {\r\n  [authActions.registerSuccess]: (_, { payload }) => payload.user, //user,token, пришли c authOperations response.data\r\n  [authActions.loginSuccess]: (_, { payload }) => payload.user,\r\n  [authActions.logoutSuccess]: () => initialUserState,\r\n  [authActions.getCurrentUserSuccess]: (_, { payload }) => payload,\r\n});\r\n\r\nconst token = createReducer(null, {\r\n  [authActions.registerSuccess]: (_, { payload }) => payload.token,\r\n  [authActions.loginSuccess]: (_, { payload }) => payload.token,\r\n  [authActions.logoutSuccess]: () => null,\r\n});\r\n//const setError = (_,{ payload }) => payload;//можно абстрагировать\r\nconst error = createReducer(null, {\r\n  [authActions.registerError]: (_, { payload }) => payload,\r\n  [authActions.loginError]: (_, { payload }) => payload,\r\n  [authActions.logoutError]: (_, { payload }) => payload,\r\n  [authActions.getCurrentUserError]: (_, { payload }) => payload,\r\n});\r\n\r\nconst isAuthenticated = createReducer(false, {\r\n  [authActions.registerSuccess]: () => true,\r\n  [authActions.loginSuccess]: () => true,\r\n  [authActions.getCurrentUserSuccess]: () => true,\r\n  [authActions.registerError]: () => false,\r\n  [authActions.loginError]: () => false,\r\n  [authActions.getCurrentUserError]: () => false,\r\n  [authActions.logoutSuccess]: () => false,\r\n});\r\n\r\nexport default combineReducers({\r\n  user,\r\n  isAuthenticated,\r\n  token,\r\n  error,\r\n});\r\n/*{\r\n  \"name\": \"Adrian Cross\",\r\n  \"email\": \"across@mail.com\",\r\n  \"password\": \"examplepassword\"\r\n}*/\r\n","const getIsAuthenticated = state => state.auth.isAuthenticated;\r\n\r\nconst getUserName = state => state.auth.user.name;\r\n\r\n// eslint-disable-next-line\r\nexport default {\r\n  getIsAuthenticated,\r\n  getUserName,\r\n};\r\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\r\nimport logger from 'redux-logger';\r\nimport {\r\n  persistStore,\r\n  persistReducer,\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from 'redux-persist';\r\nimport storage from 'redux-persist/lib/storage';\r\nimport { contactReducer } from './contacts';\r\nimport { authReducer } from './auth';\r\n\r\nconst middleware = [\r\n  ...getDefaultMiddleware({\r\n    serializableCheck: {\r\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n    },\r\n  }),\r\n  logger,\r\n];\r\n\r\nconst authPersistConfig = {\r\n  key: 'auth',\r\n  storage,\r\n  whitelist: ['token'],\r\n};\r\nconst store = configureStore({\r\n  reducer: {\r\n    auth: persistReducer(authPersistConfig, authReducer),\r\n\r\n    contacts: contactReducer,\r\n  },\r\n  middleware,\r\n  devTools: process.env.NODE_ENV === 'development',\r\n});\r\nconst persistor = persistStore(store);\r\n\r\n// eslint-disable-next-line\r\nexport default { store, persistor };\r\n\r\n//const persistor = persistStore(store);\r\n// eslint-disable-next-line\r\n//export default { store, persistor };\r\n/*const middleware = getDefaultMiddleware =>\r\n  getDefaultMiddleware().concat(logger);\r\nconst store = configureStore({\r\n  reducer: {\r\n    contacts: contactReducer,\r\n  },\r\n  devTools: process.env.NODE_ENV === 'development',\r\n  middleware,\r\n});*/\r\n","const routes = {\r\n  home: '/',\r\n  contacts: '/contacts',\r\n  register: '/register',\r\n  login: '/login',\r\n};\r\n\r\nexport default routes;\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { authSelectors } from '../../redux/auth';\r\nimport routes from '../../routes';\r\n\r\nconst styles = {\r\n  link: {\r\n    display: 'inline-block',\r\n    textDecoration: 'none',\r\n    padding: 12,\r\n    fontWeight: 700,\r\n    color: '#2A363B',\r\n  },\r\n  activeLink: {\r\n    color: '#2b32b2',\r\n  },\r\n};\r\nconst { home, contacts } = routes;\r\nconst Navigation = ({ isAuthenticated }) => (\r\n  <nav>\r\n    <NavLink\r\n      to={home}\r\n      exact\r\n      style={styles.link}\r\n      activeStyle={styles.activeLink}\r\n    >\r\n      Home\r\n    </NavLink>\r\n\r\n    {isAuthenticated && (\r\n      <NavLink\r\n        to={contacts}\r\n        exact\r\n        style={styles.link}\r\n        activeStyle={styles.activeLink}\r\n      >\r\n        Phonebook\r\n      </NavLink>\r\n    )}\r\n  </nav>\r\n);\r\n\r\nconst mapStateToProps = state => ({\r\n  isAuthenticated: authSelectors.getIsAuthenticated(state),\r\n});\r\n\r\nexport default connect(mapStateToProps)(Navigation);\r\n","export default __webpack_public_path__ + \"static/media/default-avatar.e44fc4e2.png\";","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { authSelectors, authOperations } from '../../redux/auth';\r\nimport defaultAvatar from './default-avatar.png';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nconst styles = {\r\n  container: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n  },\r\n  avatar: {\r\n    marginRight: 4,\r\n  },\r\n  name: {\r\n    fontWeight: 700,\r\n    marginRight: 12,\r\n  },\r\n};\r\n\r\nconst UserMenu = ({ avatar, name, onLogout }) => (\r\n  <div style={styles.container}>\r\n    <img src={avatar} alt=\"\" width=\"32\" style={styles.avatar} />\r\n    <span style={styles.name}>Welcome, {name}</span>\r\n    <Button\r\n      type=\"button\"\r\n      variant=\"contained\"\r\n      color=\"primary\"\r\n      onClick={onLogout}\r\n    >\r\n      Logout\r\n    </Button>\r\n  </div>\r\n);\r\n\r\nconst mapStateToProps = state => ({\r\n  name: authSelectors.getUserName(state),\r\n  avatar: defaultAvatar,\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  onLogout: authOperations.logOut,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(UserMenu);\r\n","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport routes from '../../routes';\r\n//import styles from './AuthNav.module.css';\r\nconst { register, login } = routes;\r\n\r\nconst styles = {\r\n  link: {\r\n    display: 'inline-block',\r\n    textDecoration: 'none',\r\n    padding: 12,\r\n    fontWeight: 700,\r\n    color: '#2A363B',\r\n  },\r\n  activeLink: {\r\n    color: '#2b32b2',\r\n  },\r\n};\r\nconst AuthNav = () => (\r\n  <div>\r\n    <NavLink\r\n      to={register}\r\n      exact\r\n      style={styles.link}\r\n      activeStyle={styles.activeLink}\r\n    >\r\n      Authorization\r\n    </NavLink>\r\n    <NavLink\r\n      to={login}\r\n      exact\r\n      style={styles.link}\r\n      activeStyle={styles.activeLink}\r\n    >\r\n      Login\r\n    </NavLink>\r\n  </div>\r\n);\r\n\r\nexport default AuthNav;\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Navigation from '../Navigation/Navigation';\r\nimport UserMenu from '../UserMenu/UserMenu';\r\nimport AuthNav from '../AuthNav/AuthNav';\r\nimport { authSelectors } from '../../redux/auth';\r\nimport styles from './AppBar.module.css';\r\n\r\nconst AppBar = ({ isAuthenticated }) => (\r\n  <header className={styles.header}>\r\n    <Navigation />\r\n    {isAuthenticated ? <UserMenu /> : <AuthNav />}\r\n  </header>\r\n);\r\n\r\nconst mapStateToProps = state => ({\r\n  isAuthenticated: authSelectors.getIsAuthenticated(state),\r\n});\r\n\r\n/*const mapDispatchToProps = {};*/\r\n\r\nexport default connect(mapStateToProps)(AppBar);\r\n","import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { authSelectors } from '../redux/auth';\r\n\r\n/**\r\n * - Если маршрут приватный и пользователь залогинен, рендерит компонент\r\n * - В противном случае рендерит Redirect на /login\r\n */\r\nconst PrivateRoute = ({\r\n  component: Component,\r\n  isAuthenticated,\r\n  redirectTo,\r\n  ...routeProps\r\n}) => (\r\n  <Route\r\n    {...routeProps}\r\n    render={props =>\r\n      isAuthenticated ? <Component {...props} /> : <Redirect to={redirectTo} />\r\n    }\r\n  />\r\n);\r\n\r\nconst mapStateToProps = state => ({\r\n  isAuthenticated: authSelectors.getIsAuthenticated(state),\r\n});\r\n\r\nexport default connect(mapStateToProps)(PrivateRoute);\r\n","import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { authSelectors } from '../redux/auth';\r\n\r\n/**\r\n * - Если маршрут ограниченный, и пользователь залогинен, рендерит редирект на /todos\r\n * - В противном случае рендерит компонент\r\n */\r\nconst PublicRoute = ({\r\n  component: Component,\r\n  isAuthenticated,\r\n  redirectTo,\r\n  ...routeProps\r\n}) => (\r\n  <Route\r\n    {...routeProps}\r\n    render={props =>\r\n      isAuthenticated && routeProps.restricted ? (\r\n        <Redirect to={redirectTo} />\r\n      ) : (\r\n        <Component {...props} />\r\n      )\r\n    }\r\n  />\r\n);\r\n\r\nconst mapStateToProps = state => ({\r\n  isAuthenticated: authSelectors.getIsAuthenticated(state),\r\n});\r\n\r\nexport default connect(mapStateToProps)(PublicRoute);\r\n","import React, { Component, Suspense, lazy } from 'react';\r\nimport { Switch } from 'react-router-dom';\r\nimport Container from './components/Container';\r\nimport AppBar from './components/AppBar';\r\nimport { connect } from 'react-redux';\r\n//import { contactsSelectors, contactsOperations } from './redux/contacts';\r\nimport { authOperations } from './redux/auth';\r\nimport PrivateRoute from './components/PrivateRoute';\r\nimport PublicRoute from './components/PublicRoute';\r\nimport routes from './routes';\r\nconst HomePage = lazy(() => import('./pages/HomePage'));\r\nconst RegisterPage = lazy(() => import('./pages/RegisterPage'));\r\nconst LoginPage = lazy(() => import('./pages/LoginPage'));\r\nconst ContactsPage = lazy(() => import('./pages/ContactsPage'));\r\n\r\nconst { home, contacts, register, login } = routes;\r\nclass App extends Component {\r\n  componentDidMount() {\r\n    this.props.onGetCurretnUser();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Container>\r\n        <AppBar />\r\n\r\n        <Suspense fallback={<div>Loading...</div>}>\r\n          <Switch>\r\n            <PublicRoute exact path={home} component={HomePage} />\r\n            <PublicRoute\r\n              path={register}\r\n              restricted\r\n              redirectTo={contacts}\r\n              component={RegisterPage}\r\n            />\r\n            <PublicRoute\r\n              path={login}\r\n              restricted\r\n              redirectTo={contacts}\r\n              component={LoginPage}\r\n            />\r\n            <PrivateRoute\r\n              path={contacts}\r\n              component={ContactsPage}\r\n              redirectTo={login}\r\n            />\r\n          </Switch>\r\n        </Suspense>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  onGetCurretnUser: authOperations.getCurrentUser,\r\n};\r\n\r\nexport default connect(null, mapDispatchToProps)(App);\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport { Provider } from 'react-redux';\r\nimport { PersistGate } from 'redux-persist/integration/react';\r\nimport store from './redux/store';\r\nimport App from './App';\r\nimport 'modern-normalize/modern-normalize.css';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store.store}>\r\n      <PersistGate loading={null} persistor={store.persistor}>\r\n        <BrowserRouter>\r\n          <App />\r\n        </BrowserRouter>\r\n      </PersistGate>\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n"],"sourceRoot":""}