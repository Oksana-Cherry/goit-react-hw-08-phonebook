{"version":3,"sources":["pages/Page.module.css","components/ContactForm/ContactForm.module.css","components/ContactList/ContactList.module.css","components/Filter/Filter.module.css","components/ContactForm/ContactForm.js","components/ContactList/ContactList.js","components/Filter/Filter.js","pages/ContactsPage.js"],"names":["module","exports","ContactForm","state","name","number","handleChange","e","target","value","setState","handleSubmit","event","props","contacts","onSubmit","preventDefault","undefined","find","contact","alert","resetForm","this","className","styles","Forms","Form_label","Form_input","type","placeholder","onChange","Form_button","Component","connect","contactsSelectors","getContacts","dispatch","contactsOperations","addContact","ContactListItem","id","onDelete","List_item","List_button","onClick","getVisibleContact","deleteContact","length","List","map","filter","getFilter","changeFilterName","Title","Title_input","ContactsPage","fetchContact","Container","container_contact","isLoading","color","height","width","error","getLoding","getError"],"mappings":"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","file":"static/js/4.6a0c3f35.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Page_container__84ISt\",\"title\":\"Page_title__15b4d\",\"homepage_image\":\"Page_homepage_image__1htHU\",\"form\":\"Page_form__2sVJj\",\"label\":\"Page_label__6RLhq\",\"container_contact\":\"Page_container_contact__1V-UY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Forms\":\"ContactForm_Forms__1GZTx\",\"Form_label\":\"ContactForm_Form_label__1mCAI\",\"Form_input\":\"ContactForm_Form_input__3AUk5\",\"Forminput\":\"ContactForm_Forminput__w8TVt\",\"Form_button\":\"ContactForm_Form_button__3GdF6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"List\":\"ContactList_List__3yhXh\",\"List_item\":\"ContactList_List_item__3gKrH\",\"List_button\":\"ContactList_List_button__20qAb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Title\":\"Filter_Title__zr4QK\",\"Title_input\":\"Filter_Title_input__3svey\"};","import React, { Component } from 'react';\r\nimport styles from './ContactForm.module.css';\r\n\r\nimport { connect } from 'react-redux';\r\nimport { contactsOperations, contactsSelectors } from '../../redux/contacts';\r\nclass ContactForm extends Component {\r\n  state = {\r\n    name: '',\r\n    number: '',\r\n  };\r\n\r\n  handleChange = e => {\r\n    const { name, value } = e.target;\r\n    this.setState({\r\n      [name]: value,\r\n    });\r\n  };\r\n  handleSubmit = event => {\r\n    const { name, number } = this.state;\r\n    const { contacts, onSubmit } = this.props;\r\n\r\n    event.preventDefault();\r\n\r\n    const isExistContact = contacts.find(contact => contact.name === name);\r\n\r\n    if (isExistContact !== undefined) {\r\n      alert(`${name}is already in the Phonebook`);\r\n      return;\r\n    }\r\n\r\n    onSubmit(name, number);\r\n    if (!name || !number) {\r\n      alert(`Some field is empty`);\r\n\r\n      return false;\r\n    }\r\n    this.setState({ name: '', number: '' });\r\n  };\r\n  resetForm = () => this.setState(this.state);\r\n\r\n  render() {\r\n    const { name, number } = this.state;\r\n    return (\r\n      <form className={styles.Forms} onSubmit={this.handleSubmit}>\r\n        <label className={styles.Form_label}>\r\n          Name\r\n          <input\r\n            className={styles.Form_input}\r\n            type=\"text\"\r\n            name=\"name\"\r\n            placeholder=\"\"\r\n            value={name}\r\n            onChange={this.handleChange}\r\n          />\r\n        </label>\r\n        <label className={styles.Form_label}>\r\n          Number\r\n          <input\r\n            className={styles.Form_input}\r\n            type=\"tel\"\r\n            name=\"number\"\r\n            placeholder=\"\"\r\n            value={number}\r\n            onChange={this.handleChange}\r\n          />\r\n        </label>\r\n        <button className={styles.Form_button} type=\"submit\">\r\n          Add contact\r\n        </button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = state => ({\r\n  contacts: contactsSelectors.getContacts(state),\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  onSubmit: (name, number) =>\r\n    dispatch(contactsOperations.addContact(name, number)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactForm);\r\n","import { connect } from 'react-redux';\r\nimport styles from './ContactList.module.css';\r\n//import contactsOperations from '../../redux/contacts/contect-operations';\r\n//import contactsSelectors from '../../redux/contacts/contacts-selectors';\r\nimport { contactsOperations, contactsSelectors } from '../../redux/contacts';\r\n\r\nconst ContactListItem = ({ id, name, number, onDelete }) => {\r\n  return (\r\n    <li className={styles.List_item} key={id}>\r\n      <p>{name + ': ' + number}</p>\r\n      <button className={styles.List_button} onClick={() => onDelete(id)}>\r\n        Delete\r\n      </button>\r\n    </li>\r\n  );\r\n};\r\n\r\nconst ContactList = ({ contacts, onDelete }) => {\r\n  //console.log('contacts', contacts);\r\n  if (contacts.length === 0) return null;\r\n  return (\r\n    <ul className={styles.List}>\r\n      {contacts.map(contact => (\r\n        <ContactListItem key={contact.id} {...contact} onDelete={onDelete} />\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n/*const getVisibleContacts = (contacts, filter) => {\r\n  return contacts.filter(contact =>\r\n    contact.name.toLowerCase().includes(filter.toLowerCase()),\r\n  );\r\n};\r\n/*const mapStateToProps = ({ contacts: { contacts, filter } }) => ({\r\n  contacts: getVisibleContacts(contacts, filter),\r\n});\r\n*/\r\nconst mapStateToProps = state => ({\r\n  contacts: contactsSelectors.getVisibleContact(state),\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  onDelete: id => dispatch(contactsOperations.deleteContact(id)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);\r\n","import { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './Filter.module.css';\r\nimport { contactsSelectors, changeFilterName } from '../../redux/contacts';\r\n\r\nconst Filter = ({ filter, onChange }) => {\r\n  return (\r\n    <label className={styles.Title}>\r\n      Find contacts by name\r\n      <input\r\n        className={styles.Title_input}\r\n        type=\"text\"\r\n        name=\"filter\"\r\n        value={filter}\r\n        onChange={onChange}\r\n      />\r\n    </label>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  filter: contactsSelectors.getFilter(state),\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  onChange: e => dispatch(changeFilterName(e.target.value)),\r\n});\r\n\r\nFilter.propTypes = {\r\n  onChange: PropTypes.func.isRequired,\r\n  filter: PropTypes.string,\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Container from '../components/Container';\r\nimport ContactForm from '../components/ContactForm';\r\nimport ContactList from '../components/ContactList/';\r\nimport Filter from '../components/Filter';\r\nimport Loader from 'react-loader-spinner';\r\nimport 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\r\nimport { contactsSelectors, contactsOperations } from '../redux/contacts';\r\nimport styles from './Page.module.css';\r\n\r\nclass ContactsPage extends Component {\r\n  componentDidMount() {\r\n    this.props.fetchContact();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Container className={styles.container_contact}>\r\n        <div>\r\n          <h1>Phonebook</h1>\r\n\r\n          <ContactForm />\r\n        </div>\r\n        <div>\r\n          <h2>Contacts</h2>\r\n\r\n          <Filter />\r\n\r\n          <ContactList />\r\n          {this.props.isLoading && (\r\n            <Loader\r\n              type=\"ThreeDots\"\r\n              color=\"#303f9f\"\r\n              height={80}\r\n              width={80}\r\n              className=\"Loader\"\r\n            />\r\n          )}\r\n        </div>\r\n        {this.props.error && <h1>No result found!</h1>}\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  isLoading: contactsSelectors.getLoding(state),\r\n  error: contactsSelectors.getError(state),\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  fetchContact: () => dispatch(contactsOperations.fetchContact()),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactsPage);\r\n"],"sourceRoot":""}